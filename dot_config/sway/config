# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
set $mod Mod4
set $alt Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# preferred terminal
set $term alacritty
# preferred browser
set $browser librewolf
# preferred app launcher (pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on)
set $menu mdmenu_run | xargs swaymsg exec --
set $lockscreen swaylock -f --screenshots --clock --indicator-idle-visible --fade-in 10 --effect-greyscale --effect-blur 5x10 --grace 10

### Output configuration
# wallpaper
output "*" bg /home/joao/.local/share/wallpaper/ds_1.png fill
output DP-1 {
    mode 1920x1080@143.855Hz
    bg /home/joao/.local/share/wallpaper/ds_1.png fill
}
output HDMI-A-1 {
    bg /home/joao/.local/share/wallpaper/ds_2.png fill
}
# primary monitor for wine
exec_always xrandr --output $(xrandr | grep -m 1 XWAYLAND | awk '{print $1;}') --primary

### Idle configuration
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 600 $lockscreen \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep $lockscreen

# notification daemon (when already running, does nothing)
exec_always swaync

### Input configuration
#
input type:keyboard {
    xkb_layout "irao_pt"
    repeat_delay 300
    repeat_rate 50
}
#
input type:touchpad {
    tap enabled
}
#
input type:pointer {
    # disable mouse acceleration (enabled by default; to set it manually, use "adaptive" instead of "flat")
    accel_profile "flat"
}

exec_always "pgrep swayless || swayless init"

### Themeing
# Import GTK 3 to gsettings
exec_always import-gsettings
#
default_border pixel 2
gaps inner 3
gaps outer 3
smart_borders on
smart_gaps on

### Key bindings
#
## Basics:
# exit sway
bindsym $mod+Shift+Control+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
# reload sway config
bindsym $mod+Shift+Control+r reload
# kill focused window
bindsym $alt+f4 kill
# lock screen
bindsym $mod+f12 exec $lockscreen --fade-in 0 --grace 0
#
## Apps:
# terminal
bindsym $mod+t exec $term
bindsym $mod+Control+t exec foot
# app launcher
bindsym $mod+p exec $menu
bindsym $mod+Return exec $menu
# other
bindsym $mod+Control+a exec $term -e calcurse
bindsym $mod+Control+c exec $term -e python
bindsym $mod+Control+Shift+c exec $term -e mmaxima
bindsym $mod+Control+e exec XDG_SESSION_TYPE=x11 GDK_BACKEND=x11 MOZ_ENABLE_WAYLAND=0 QT_QPA_PLATFORM="xcb" birdtray -t
bindsym $mod+Control+f exec $term -e lfcd_sh
bindsym $mod+Control+h exec dpizhid
bindsym $mod+Control+i exec $term -e newsboat
bindsym $mod+Control+m exec dmount
# bindsym $mod+m exec screen_measure
bindsym $mod+Control+n exec dtodo
bindsym $mod+Control+p exec gimp
bindsym $mod+Control+r exec $browser
bindsym $mod+Shift+r exec firefox
bindsym $mod+Control+s exec $term -e ncmpcpp
bindsym $mod+Control+v exec drecord
bindsym $mod+Control+w exec $term -e nvim
## Special keys:
# display
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
bindsym XF86Display exec brightnessctl -r
# audio
bindsym $mod+f8 exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym $mod+Shift+f8 exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym $mod+f9 exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym $mod+f10 exec pactl set-sink-volume @DEFAULT_SINK@ +5%
#
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
# media
bindsym $mod+f5 exec playerctl play-pause
bindsym $mod+Shift+f5 exec playerctl position 0
bindsym $mod+Control+f5 exec notify-send -u low 'Current song' "$(mpc current)"
bindsym $mod+f6 exec playerctl previous
bindsym $mod+Shift+f6 exec playerctl volume 0.05-
bindsym $mod+f7 exec playerctl next
bindsym $mod+Shift+f7 exec playerctl volume 0.05+
#
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPlay+Shift exec playerctl position 0
bindsym XF86AudioPlay+Control exec notify-send -u low 'Current song' "$(mpc current)"
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioPrev+Shift exec playerctl volume 0.05-
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioNext+Shift exec playerctl volume 0.05+
#
bindsym XF86Search exec $menu
## Notifications:
bindsym $mod+f11 exec swaync-client -d -sw
bindsym $mod+Control+backslash exec swaync-client --close-latest -sw
bindsym $mod+Control+Shift+backslash exec swaync-client --close-all -sw
bindsym $mod+Control+space exec swaync-client -t -sw
## screenshot
bindsym $mod+Print exec screenshots "snip-edit"
bindsym $mod+Shift+Print exec screenshots "current-save"
bindsym $mod+Shift+s exec screenshots "snip"
bindsym $mod+Control+Print exec screenshots
## Movement:
# drag floating windows by holding down $mod and left mouse button
# resize them with right mouse button + $mod
floating_modifier $mod normal
# move focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# tab
bindsym $alt+Tab focus next
bindsym Control+Tab focus prev
# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
#
## Workspaces:
# switch to workspace
bindsym $mod+1 exec "swayless focus 1"
bindsym $mod+2 exec "swayless focus 2"
bindsym $mod+3 exec "swayless focus 3"
bindsym $mod+4 exec "swayless focus 4"
bindsym $mod+5 exec "swayless focus 5"
bindsym $mod+6 exec "swayless focus 6"
bindsym $mod+7 exec "swayless focus 7"
bindsym $mod+8 exec "swayless focus 8"
bindsym $mod+9 exec "swayless focus 9"
# move to workspace
bindsym $mod+Shift+1 exec "swayless move 1"
bindsym $mod+Shift+2 exec "swayless move 2"
bindsym $mod+Shift+3 exec "swayless move 3"
bindsym $mod+Shift+4 exec "swayless move 4"
bindsym $mod+Shift+5 exec "swayless move 5"
bindsym $mod+Shift+6 exec "swayless move 6"
bindsym $mod+Shift+7 exec "swayless move 7"
bindsym $mod+Shift+8 exec "swayless move 8"
bindsym $mod+Shift+9 exec "swayless move 9"
# bring workspace here
bindsym $mod+Control+1 exec "swayless move-workspace-here 1"
bindsym $mod+Control+2 exec "swayless move-workspace-here 2"
bindsym $mod+Control+3 exec "swayless move-workspace-here 3"
bindsym $mod+Control+4 exec "swayless move-workspace-here 4"
bindsym $mod+Control+5 exec "swayless move-workspace-here 5"
bindsym $mod+Control+6 exec "swayless move-workspace-here 6"
bindsym $mod+Control+7 exec "swayless move-workspace-here 7"
bindsym $mod+Control+8 exec "swayless move-workspace-here 8"
bindsym $mod+Control+9 exec "swayless move-workspace-here 9"
# focus next/prev output
bindsym $mod+Comma focus output left
bindsym $mod+Period focus output right
# move container to next/prev output
bindsym $mod+Shift+Comma exec "swayless prev-output"
bindsym $mod+Shift+Period exec "swayless next-output"
# switch to the previous tab of the current output
bindsym $mod+Tab exec "swayless alt-tab"
## Layout stuff:
# "split" the current object of focus with $mod+s or $mod+v, for horizontal and vertical splits
bindsym $mod+s splitv
bindsym $mod+v splith
# switch the current container between different layout styles
bindsym $mod+Left layout stacking
bindsym $mod+Right layout tabbed
bindsym $mod+Down layout splith
bindsym $mod+Up layout splitv
# make the current focus fullscreen
bindsym $mod+f fullscreen
# toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle
# swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle
# move focus to the parent container
bindsym $mod+a focus parent
## Scratchpad:
# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad
# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
## Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}
bindsym $mod+b exec killall -SIGUSR1 waybar
bar {
    swaybar_command waybar
}

exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

### Floating windows
for_window [window_role="task_dialog|app|bubble|pop-up|page-info|Preferences"] floating enable
for_window [title="Steam - Update*"] floating enable

include /etc/sway/config.d/*

### Autoruns
exec "/usr/lib/polkit-kde-authentication-agent-1"
# exec trayscale --hide-window --gapplication-service
# exec XDG_SESSION_TYPE=x11 GDK_BACKEND=x11 MOZ_ENABLE_WAYLAND=0 QT_QPA_PLATFORM="xcb" birdtray
exec mpd
