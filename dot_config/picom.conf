log-level = "warn";

shadow = false;
fading = false;

# transparency
inactive-opacity-override = false;
#opacity-rule = [
#	"20:class_g = 'dmenu' && focused",
#	"20:class_g = 'dmenu' && !focused"
#];
focus-exclude = [
	"class_g = 'dwm'",
	"class_g = 'dmenu'",
	"! name~=''"
];

# Background-Blurring
blur-background = false;
blur-background-frame = false;
blur-background-fixed = true;
blur:
{
  method = "dual_kawase";
};
blur-background-exclude = [
  "class_g = 'slop'",
	"class_g = 'Firefox' && argb",
	"window_type = 'dock'",
	"window_type = 'desktop'"
];

# General Settings
backend = "glx";
vsync = true;
mark-wmwin-focused = true;
detect-rounded-corners = true;
detect-client-opacity = true;
## unredirect all windows if a full-screen opaque window is detected to maximize performance
unredir-if-possible = true;
unredir-if-possible-delay = 5000;
unredir-if-possible-exclude = [
	"class_g = 'firefox'",
	"class_g = 'st-256color'"
];
detect-transient = true;
# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer.
# Might cause incorrect opacity when rendering transparent content (but never
# practically happened) and may not work with blur-background.
# My tests show a 15% performance boost. Recommended.
#
# glx-no-stencil = false
# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes,
# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).
# Recommended if it works.
#
glx-no-rebind-pixmap = false
use-damage = true;
