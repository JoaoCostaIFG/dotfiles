#!/bin/bash
### This script inhibits system idling when a bluetooth device, from a list of
### devices, is connected to the computer. Useful to unlock the computer when
### your close to it.
###
### Keep a config file in `~/.config/blueidle.toml` with contents following
### something like this:
###
### ```bash
### [general]
### lock_cmd = "loginctl lock-session"
### unlock_cmd = "ydotool mousemove -- 1 0; pkill -USR1 hyprlock"
### query_interval_secs = 5
### lock_at_startup = 1
### devices = ["XX:XX:XX:XX:XX:XX", "YY:YY:YY:YY:YY:YY"]
### ```
###
### This script depends on tombl to parse/read the config file.

set -euo pipefail

config_file="${XDG_CONFIG_HOME:-$HOME/.config}/blueidle.toml"
[ ! -f "$config_file" ] && echo "No config file found at: $config_file" && exit 1
eval "$(tombl -e CONF=general "$config_file")"
eval "$(tombl -e DEVICES=general.devices "$config_file")"

lock() {
  echo lock
  eval "${CONF[lock_cmd]}"
}

unlock() {
  echo unlock
  eval "${CONF[unlock_cmd]}"
}

idle_inhibit() {
  echo inhibit idle
  systemd-inhibit --what=idle --mode=block sleep infinity &
}

idle_allow() {
  echo idle allow
  # kill the background idle inhibit sleep
  kill "$(jobs -p)"
}

# returns the number of detected devices
# detected devices are devices on the `devices list` that are connected
# return 0 when there are devices connected
detect_devices() {
  detected=0
  for device in $(bluetoothctl devices Connected | cut -d' ' -f2); do
    echo "${DEVICES[@]}" | grep -q -m1 "$device" && detected="$((detected + 1))"
  done
  [ "$detected" -ne 0 ] && return 0 || return 1
}

wait_devs() {
  # sleep until there is at least 1 device connected
  while ! detect_devices; do
    sleep "${CONF[query_interval_secs]}"
  done
}

wait_no_devs() {
  # sleep until there are no devices connected
  while detect_devices; do
    sleep "${CONF[query_interval_secs]}"
  done
}

if ! detect_devices; then
  # start by locking: useful when device boots with autologin
  if [ "${CONF[lock_at_startup]}" -eq 1 ]; then
    lock
  fi
fi

auth_state=0
while true; do
  if [ "$auth_state" -eq 0 ]; then
    if detect_devices; then
      auth_state=1
      unlock
      idle_inhibit
    fi
  else
    if ! detect_devices; then
      auth_state=0
      idle_allow
    fi
  fi

  sleep "${CONF[query_interval_secs]}"
done
