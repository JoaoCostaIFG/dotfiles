#!/bin/sh
### Dims all screens by lowering their brightness. Restores the brightness on exit/kill.
### Based on [xss-lock's dim-screen.sh](https://github.com/xdbob/xss-lock/blob/master/doc/dim-screen.sh).
###
### The ddcci kernel module (aur: ddcci-driver-linux-dkms) allows this script to work
### with external monitors.  
### Depends on brightnessctl.

step_time=0.001  # in seconds
step_amount=10   # in percentage

step_cnt=$((100 / step_amount)) # e.g. maximum of 10 steps to bring from 100% to 0%, using step of 10%

# fade all backlight devices
screens="$(brightnessctl -m -c 'backlight' -l | cut -d',' -f1)"
# save current brightness for restore
curr_brights="$(brightnessctl -m -c 'backlight' -l | cut -d',' -f3)"

fade() {
  i=0
  while [ $i -lt $step_cnt ]; do
    for screen in $screens; do
      brightnessctl -q -d "$screen" set "${step_amount}%-"
    done
    i=$((i + 1))
    sleep "$step_time"
  done
}

restore() {
  i=1
  for screen in $screens; do
    bright="$(echo "$curr_brights" | sed "${i}q;d")"
    echo "$screen - $bright"
    brightnessctl -q -d "$screen" set "$bright"
    i=$((i + 1))
  done
}

trap 'exit 0' TERM INT
trap "restore; kill %%" EXIT

fade
sleep 2147483647 &
wait
