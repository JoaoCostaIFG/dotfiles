#!/bin/sh
### Script that can:
### - Take full-screen screen-shots (saves them in a previously specified folder);
### - Screen-shot a selection of the screen (places the image in the clipboard);
### - Output color information of a selection (saves RGB color code in clipboard and show a notification for it too).
###
### Args:
### - "snip" - take a snip and pass it to the clipboard (just clicking get the full clicked window);
### - "snip-edit" - take a snip and edit it
### - "picker" - color picker (needs work);
### - "current" - screenshot current screen;
### - "current-save" - screenshot current screen and auto save it to $SCREENSHOT_SAVEDIR directory;
### - "ocr" - select area and copy text;
### - no args - dmenu arg selection.
### Depends on:
### - [grim](https://sr.ht/~emersion/grim/)
### - [slurp](https://github.com/emersion/slurp)
### - [swappy](https://github.com/jtheoof/swappy)
### - [hyprpicker](https://github.com/hyprwm/hyprpicker)
### - [tesseract-ocr](https://github.com/tesseract-ocr/tesseract)
### - wl-clipboard
### - bemenu

set -eu

OCR_LANGS="por+eng"

parse_arg() {
  case "$1" in
  "snip")
    # Sniping tool
    geometry="$(slurp)"
    if [ -z "$geometry" ]; then
      exit 1
    fi
    grim -g "$geometry" - | wl-copy
    notify-send -e "Snipping tool" "Snip saved to clipboard" &
    ;;
  "snip-edit")
    # snip and then edit
    geometry="$(slurp)"
    if [ -z "$geometry" ]; then
      exit 1
    fi
    grim -g "$geometry" - | swappy -f -
    ;;
  "picker")
    # Color picker
    hyprpicker --autocopy
    ;;
  "current")
    grim - | wl-copy
    ;;
  "current-save")
    save_location="${SCREENSHOT_SAVEDIR:-$HOME/Pictures/screenshots}/"
    file_name="${save_location}/$(date +%Y%m%d)_screenshot.png"
    grim "$file_name"
    notify-send -e -i "$file_name" "Print screen" "Print saved to $file_name" &
    ;;
  "ocr")
    geometry="$(slurp)"
    if [ -z "$geometry" ]; then
      exit 1
    fi
    grim -g "$geometry" - | tesseract -l "$OCR_LANGS" --oem 2 - - | wl-copy
    ;;
  *)
    exit 1
    ;;
  esac
}

if [ "${1+x}" ]; then
  parse_arg "$1"
else
  parse_arg "$(printf "snip\\nsnip-edit\\npicker\\ncurrent\\ncurrent-save\\nocr" | bemenu -i -p "What to do?")"
fi
