#!/bin/sh
### This spawns stalonetray (-s option) as a system-tray and hides it. When the script
### when the script is called again the system-tray is shown under the mouse, and hidden
### when the mouse leaves.  
### Yes, this is weird, but I like it.
###
### Depends on: stalonetray, and xdotool.

getwid() {
  xdotool search --classname stalonetray
}

spawn() {
  stalonetray & # spawn tray
  while [ -z "$wid" ]; do # busy-wait
    wid="$(getwid)"
    [ -z "$wid" ] && continue
  done
  xdotool windowunmap "$wid" # make it invisible
  # add hook to hide window on mouse leave
  xdotool behave "$wid" mouse-leave windowunmap >/dev/null 2>&1
}

case "$@" in
  "-g")
    getwid
    ;;
  "-s" | "--spawn")
    spawn
    exit
    ;;
esac


wid="$(getwid)"
if [ -z "$wid" ]; then
  echo "Tray not found. Exiting..."
  exit 1
fi

map_state="$(xwininfo -id "$wid" | grep "Map State:" | cut -d':' -f2 | tr -d ' ')"
if [ "$map_state" = "IsViewable" ]; then
  # hide it
  xdotool windowunmap "$wid"
else
  # get mouse location
  eval "$(xdotool getmouselocation --shell)"

  # apply offset to mouse location
  X=$((X - 12))
  [ $X -lt 0 ] && X=0
  Y=$((Y - 4))
  [ $Y -lt 0 ] && Y=0

  # move window and make it visible
  xdotool windowmove "$wid" "${X}" "${Y}" windowmap "$wid"
fi

